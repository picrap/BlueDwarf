//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueDwarf.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ProxyAnalysisLocale {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ProxyAnalysisLocale() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlueDwarf.Resources.Localization.ProxyAnalysisLocale", typeof(ProxyAnalysisLocale).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let&apos;s got with this.
        /// </summary>
        public static string ApplyButtonText {
            get {
                return ResourceManager.GetString("ApplyButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll configure it myself, but thanks for the advice.
        /// </summary>
        public static string CancelButtonText {
            get {
                return ResourceManager.GetString("CancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your default proxy is.
        /// </summary>
        public static string DefaultProxyPrefix {
            get {
                return ResourceManager.GetString("DefaultProxyPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :.
        /// </summary>
        public static string DefaultProxySuffix {
            get {
                return ResourceManager.GetString("DefaultProxySuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS does not resolve locally.
        /// </summary>
        public static string DnsDoesNotResolveLocally {
            get {
                return ResourceManager.GetString("DnsDoesNotResolveLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS does not resolve locally sensitive sites.
        /// </summary>
        public static string DnsDoesNotResolveLocallySensitiveSites {
            get {
                return ResourceManager.GetString("DnsDoesNotResolveLocallySensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS resolves locally.
        /// </summary>
        public static string DnsResolvesLocally {
            get {
                return ResourceManager.GetString("DnsResolvesLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS resolves locally sensitive sites.
        /// </summary>
        public static string DnsResolvesLocallySensitiveSites {
            get {
                return ResourceManager.GetString("DnsResolvesLocallySensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system does not require my services (which is good).
        /// </summary>
        public static string DoesNotRequireProxy {
            get {
                return ResourceManager.GetString("DoesNotRequireProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy allows sensitive sites.
        /// </summary>
        public static string ProxyAllowsSensitiveSites {
            get {
                return ResourceManager.GetString("ProxyAllowsSensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy allows connection to sensitive sites using IP.
        /// </summary>
        public static string ProxyConnectsToSensitiveIPs {
            get {
                return ResourceManager.GetString("ProxyConnectsToSensitiveIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy does not allow sensitive sites.
        /// </summary>
        public static string ProxyDoesNotAllowSensitiveSites {
            get {
                return ResourceManager.GetString("ProxyDoesNotAllowSensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy does no allow connection to sensitive sites using IP.
        /// </summary>
        public static string ProxyDoesNotConnectToSensitiveIPs {
            get {
                return ResourceManager.GetString("ProxyDoesNotConnectToSensitiveIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application can work only with the local proxy.
        /// </summary>
        public static string WorkWithLocalProxy {
            get {
                return ResourceManager.GetString("WorkWithLocalProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, you&apos;ll have to figure out your own solution :&apos;(.
        /// </summary>
        public static string WorkWithSomethingElse {
            get {
                return ResourceManager.GetString("WorkWithSomethingElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application can work with the local and a remote proxy (not provider).
        /// </summary>
        public static string WorkWithTwoProxy {
            get {
                return ResourceManager.GetString("WorkWithTwoProxy", resourceCulture);
            }
        }
    }
}
